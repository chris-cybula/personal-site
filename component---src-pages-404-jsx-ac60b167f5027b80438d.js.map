{"version":3,"sources":["webpack:///./src/components/layout.jsx","webpack:///./src/pages/404.jsx","webpack:///./src/components/Seo.jsx"],"names":["GlobalStyle","createGlobalStyle","Layout","children","useStaticQuery","Container","styled","div","NotFoundPage","title","SEO","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"qQAKA,IAAMA,EAAcC,YAAH,KA6BFC,EAvBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACHC,yBAAe,cAU5B,OACE,oCACE,kBAACJ,EAAD,MACA,8BAAOG,K,YCpBPE,EAAYC,IAAOC,IAAV,wEAAGD,CAAH,yHAmBAE,UATM,kBACnB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,mBACX,kBAACJ,EAAD,KACE,uC,kCClBN,iDAKA,SAASK,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMJ,EAAS,EAATA,MAC9BK,EAASV,yBAAe,YAAxBU,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YACnDM,EAAY,UAAGH,EAAKE,oBAAR,aAAG,EAAmBP,MAExC,OACE,kBAAC,IAAD,CACES,eAAgB,CACdN,QAEFH,MAAOA,EACPU,cAAeF,EAAY,GAAMA,EAAiB,KAClDJ,KAAM,CACJ,CACEO,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAP,EAAKE,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASZ,GAEX,CACEW,KAAK,sBACLC,QAASN,IAEXS,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-404-jsx-ac60b167f5027b80438d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n  }\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <GlobalStyle />\n      <main>{children}</main>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/Seo\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: black;\n  color: white;\n`\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <Container>\n      <h1>404</h1>\n    </Container>\n  </Layout>\n)\n\nexport default NotFoundPage\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}